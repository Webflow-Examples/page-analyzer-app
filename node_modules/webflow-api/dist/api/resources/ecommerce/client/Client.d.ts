/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Webflow from "../../..";
export declare namespace Ecommerce {
    interface Options {
        environment?: core.Supplier<environments.WebflowEnvironment | string>;
        accessToken: core.Supplier<core.BearerToken>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Ecommerce {
    protected readonly _options: Ecommerce.Options;
    constructor(_options: Ecommerce.Options);
    /**
     * Retrieve ecommerce settings for a site.
     *
     * Required scope | `ecommerce:read`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.ConflictError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.ecommerce.getSettings("site_id")
     */
    getSettings(siteId: string, requestOptions?: Ecommerce.RequestOptions): Promise<Webflow.EcommerceSettings>;
    protected _getAuthorizationHeader(): Promise<string>;
}
