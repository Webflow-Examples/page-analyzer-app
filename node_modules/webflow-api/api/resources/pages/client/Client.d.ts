/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Webflow from "../../..";
import { Scripts } from "../resources/scripts/client/Client";
export declare namespace Pages {
    interface Options {
        environment?: core.Supplier<environments.WebflowEnvironment | string>;
        accessToken: core.Supplier<core.BearerToken>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Pages {
    protected readonly _options: Pages.Options;
    constructor(_options: Pages.Options);
    /**
     * List of all pages for a site </br></br> Required scope | `pages:read`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.pages.list("site_id", {})
     */
    list(siteId: string, request?: Webflow.PagesListRequest, requestOptions?: Pages.RequestOptions): Promise<Webflow.PageList>;
    /**
     * Get metadata information for a single page </br></br> Required scope | `pages:read`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.pages.getMetadata("page_id", {})
     */
    getMetadata(pageId: string, request?: Webflow.PagesGetMetadataRequest, requestOptions?: Pages.RequestOptions): Promise<Webflow.Page>;
    /**
     * Update Page-level metadata, including SEO and Open Graph fields. </br></br> Required scope | `pages:write`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.pages.updatePageSettings("page_id", {
     *         body: {
     *             id: "6596da6045e56dee495bcbba",
     *             siteId: "6258612d1ee792848f805dcf",
     *             title: "Guide to the Galaxy",
     *             slug: "guide-to-the-galaxy",
     *             parentId: "6419db964a9c435aa3af6251",
     *             collectionId: "6390c49774a71f12831a08e3",
     *             createdOn: new Date("2024-03-11T10:42:00.000Z"),
     *             lastUpdated: new Date("2024-03-11T10:42:42.000Z"),
     *             archived: false,
     *             draft: false,
     *             canBranch: true,
     *             isMembersOnly: false,
     *             seo: {
     *                 title: "The Ultimate Hitchhiker's Guide to the Galaxy",
     *                 description: "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels."
     *             },
     *             openGraph: {
     *                 title: "Explore the Cosmos with The Ultimate Guide",
     *                 titleCopied: false,
     *                 description: "Dive deep into the mysteries of the universe with your guide to everything galactic.",
     *                 descriptionCopied: false
     *             }
     *         }
     *     })
     */
    updatePageSettings(pageId: string, request: Webflow.UpdatePageSettingsRequest, requestOptions?: Pages.RequestOptions): Promise<Webflow.Page>;
    /**
     * Get static content from a static page. </br> If you do not provide a Locale ID in your request, the response will return any content that can be localized from the Primary locale</br></br> Required scope | `pages:read`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.pages.getContent("page_id", {})
     */
    getContent(pageId: string, request?: Webflow.PagesGetContentRequest, requestOptions?: Pages.RequestOptions): Promise<Webflow.Dom>;
    /**
     * Update static content on a static page. This endpoint supports sending 1000 nodes per request. </br></br> Required scope | `pages:write`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.pages.updateStaticContent("page_id", {
     *         locale: "locale",
     *         nodes: [{
     *                 nodeId: "a245c12d-995b-55ee-5ec7-aa36a6cad623",
     *                 text: "<h1>The Hitchhiker's Guide to the Galaxy</h1>"
     *             }, {
     *                 nodeId: "a245c12d-995b-55ee-5ec7-aa36a6cad627",
     *                 text: "<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>"
     *             }, {
     *                 nodeId: "a245c12d-995b-55ee-5ec7-aa36a6cad629",
     *                 text: "<img alt='Marvin, the Paranoid Android' src='path/to/image/with/assetId/659595234426a9fcbad57043'/>"
     *             }, {
     *                 nodeId: "a245c12d-995b-55ee-5ec7-aa36a6cad623",
     *                 text: "<h1>Hello world</h1>"
     *             }]
     *     })
     */
    updateStaticContent(pageId: string, request: Webflow.DomWrite, requestOptions?: Pages.RequestOptions): Promise<Webflow.UpdateStaticContentResponse>;
    protected _scripts: Scripts | undefined;
    get scripts(): Scripts;
    protected _getAuthorizationHeader(): Promise<string>;
}
