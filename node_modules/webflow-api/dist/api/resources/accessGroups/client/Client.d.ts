/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Webflow from "../../..";
export declare namespace AccessGroups {
    interface Options {
        environment?: core.Supplier<environments.WebflowEnvironment | string>;
        accessToken: core.Supplier<core.BearerToken>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class AccessGroups {
    protected readonly _options: AccessGroups.Options;
    constructor(_options: AccessGroups.Options);
    /**
     * Get a list of access groups for a site <br><br> Required scope | `users:read`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.accessGroups.list("site_id", {})
     */
    list(siteId: string, request?: Webflow.AccessGroupsListRequest, requestOptions?: AccessGroups.RequestOptions): Promise<Webflow.AccessGroupList>;
    protected _getAuthorizationHeader(): Promise<string>;
}
