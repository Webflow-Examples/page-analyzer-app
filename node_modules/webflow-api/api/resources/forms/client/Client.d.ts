/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Webflow from "../../..";
export declare namespace Forms {
    interface Options {
        environment?: core.Supplier<environments.WebflowEnvironment | string>;
        accessToken: core.Supplier<core.BearerToken>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Forms {
    protected readonly _options: Forms.Options;
    constructor(_options: Forms.Options);
    /**
     * List forms for a given site </br></br> Required scope | `forms:read`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.ConflictError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.forms.list("site_id", {})
     */
    list(siteId: string, request?: Webflow.FormsListRequest, requestOptions?: Forms.RequestOptions): Promise<Webflow.FormList>;
    /**
     * Get information about a given form</br></br> Required scope | `forms:read`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.forms.get("form_id")
     */
    get(formId: string, requestOptions?: Forms.RequestOptions): Promise<Webflow.Form>;
    /**
     * List form submissions for a given form </br></br> Required scope | `forms:read`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.forms.listSubmissions("form_id")
     */
    listSubmissions(formId: string, requestOptions?: Forms.RequestOptions): Promise<Webflow.FormSubmissionList>;
    /**
     * Get information about a given form submission</br></br> Required scope | `forms:read`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.forms.getSubmission("form_submission_id")
     */
    getSubmission(formSubmissionId: string, requestOptions?: Forms.RequestOptions): Promise<Webflow.FormSubmission>;
    /**
     * Update hidden fields on a form submission</br></br> Required scope | `forms:write`
     * @throws {@link Webflow.BadRequestError}
     * @throws {@link Webflow.UnauthorizedError}
     * @throws {@link Webflow.ForbiddenError}
     * @throws {@link Webflow.NotFoundError}
     * @throws {@link Webflow.ConflictError}
     * @throws {@link Webflow.TooManyRequestsError}
     * @throws {@link Webflow.InternalServerError}
     *
     * @example
     *     await webflow.forms.updateSubmission("form_submission_id", {})
     */
    updateSubmission(formSubmissionId: string, request?: Webflow.FormsUpdateSubmissionRequest, requestOptions?: Forms.RequestOptions): Promise<Webflow.FormSubmission>;
    protected _getAuthorizationHeader(): Promise<string>;
}
